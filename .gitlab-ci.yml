# This file is a template, and might need editing before it works on your project.
# This template uses the java:8 docker image because there isn't any
# official Gradle image at this moment
#
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle
image: openjdk:8


variables:
  ANDROID_SDK_TOOLS: "25.2.3"
  
stages:
    - setup
    - build
    - release
  
before_script:
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    - chmod +x gradlew
    - dpkg --add-architecture i386
    - apt-get --quiet update
    - apt-get --quiet install -y openjfx libc6:i386 libstdc++6:i386 unzip lib32z1
    - export APP_VERSION=$CI_COMMIT_TAG; if [ -z "${APP_VERSION}" ]; then APP_VERSION=git-$(echo ${CI_COMMIT_SHA} | cut -c1-7); fi
    - sed -i "s/app_version=.*/app_version=${APP_VERSION}/" gradle.properties

setup:
  stage: setup
   
  artifacts:
    expire_in: 30min
    untracked: true
    
  script: 
    - wget --quiet --output-document=android-sdk-linux.zip https://dl.google.com/android/repository/tools_r${ANDROID_SDK_TOOLS}-linux.zip
    - unzip android-sdk-linux.zip -d android-sdk-linux
    - rm -v android-sdk-linux.zip
    - mkdir "$ANDROID_HOME/licenses" || true
    - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
    - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"

Jar:
  stage: build
  artifacts:
    name: "DeezerDownloader"
    paths:
      - DeezerDownloader.jar
            
  dependencies:
    - setup
    
  script:
    - ./gradlew -g /cache/.gradle distJar
    - mv dist/DeezerDownloader.jar DeezerDownloader.jar

Exe:
  stage: build
  artifacts:
    name: "DeezerDownloader"
    paths:
      - DeezerDownloader.exe
            
  dependencies:
    - setup
    
  script:
    - ./gradlew -g /cache/.gradle distExe
    - mv dist/DeezerDownloader.exe DeezerDownloader.exe

Apk:
  stage: build
  artifacts:
    name: "DeezerDownloader"
    paths:
      - DeezerDownloader.apk

  dependencies:
    - setup

  script:
    - curl -sS "${STORE_URL}" -o deezerdownloader.keystore
    - echo "storeFile=../deezerdownloader.keystore" > signing.properties
    - echo "keyAlias=${KEY_ALIAS}" >> signing.properties
    - echo "storePassword=${STORE_PASSWORD}" >> signing.properties
    - echo "keyPassword=${KEY_PASSWORD}" >> signing.properties
    - ./gradlew -g /cache/.gradle distAndroid
    - mv dist/DeezerDownloader.apk DeezerDownloader.apk

Release:
  stage: release
  only:
    - tags

  dependencies:
    - Apk
    - Exe
    - Jar

  artifacts:
    name: "DeezerDownloader"
    paths:
      - DeezerDownloader.apk
      - DeezerDownloader.exe
      - DeezerDownloader.jar

  script:
    - export EXE_URL=https://gitlab.com/DeezerDownloader/DeezerDownloader/builds/${CI_JOB_ID}/artifacts/file/DeezerDownloader.exe
    - export JAR_URL=https://gitlab.com/DeezerDownloader/DeezerDownloader/builds/${CI_JOB_ID}/artifacts/file/DeezerDownloader.jar
    - export PAYLOAD=$(echo tag_name=${APP_VERSION}\&ref=master\&release_description=\{\"jar\":\"${JAR_URL}\", \"djar\":\"${JAR_URL}\", \"exe\":\"${EXE_URL}\", \"dexe\":\"${EXE_URL}\", \"changes\":\[\]\})
    - echo $PAYLOAD | curl -X POST 'https://gitlab.com/api/v4/projects/${RELEASE_PROJECT_ID}/repository/tags' -H "PRIVATE-TOKEN:${PRIVATE_TOKEN}"  -d @-
